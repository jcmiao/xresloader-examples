
// Copyright 2021 xresloader. All rights reserved.
// Generated by xres-code-generator, please don't edit it
//
#include <cstdlib>
#include <cstring>

#include "config_easy_api.h"

namespace excel {
    // ======================================== objects_cfg ========================================
    const excel::config_set_objects_cfg::id_container_type& get_objects_cfg_all_of_id() {
        static excel::config_set_objects_cfg::id_container_type empty;
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return empty;
        }

        return group->objects_cfg.get_all_of_id();
    }

    excel::config_set_objects_cfg::id_value_type get_objects_cfg_by_id(uint32_t Id) {
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return NULL;
        }

        return group->objects_cfg.get_by_id(Id);
    }
    const excel::config_set_objects_cfg::type_container_type& get_objects_cfg_all_of_type() {
        static excel::config_set_objects_cfg::type_container_type empty;
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return empty;
        }

        return group->objects_cfg.get_all_of_type();
    }

    const excel::config_set_objects_cfg::type_value_type* get_objects_cfg_by_type(uint32_t Type) {
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return NULL;
        }

        return group->objects_cfg.get_list_by_type(Type);
    }

    excel::config_set_objects_cfg::item_ptr_type get_objects_cfg_by_type(uint32_t Type, size_t idx) {
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return NULL;
        }

        return group->objects_cfg.get_by_type(Type, idx);
    }

    // ======================================== quests_cfg ========================================
    const excel::config_set_quests_cfg::id_container_type& get_quests_cfg_all_of_id() {
        static excel::config_set_quests_cfg::id_container_type empty;
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return empty;
        }

        return group->quests_cfg.get_all_of_id();
    }

    excel::config_set_quests_cfg::id_value_type get_quests_cfg_by_id(uint32_t Id) {
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return NULL;
        }

        return group->quests_cfg.get_by_id(Id);
    }
    const excel::config_set_quests_cfg::type_container_type& get_quests_cfg_all_of_type() {
        static excel::config_set_quests_cfg::type_container_type empty;
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return empty;
        }

        return group->quests_cfg.get_all_of_type();
    }

    const excel::config_set_quests_cfg::type_value_type* get_quests_cfg_by_type(uint32_t Type) {
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return NULL;
        }

        return group->quests_cfg.get_list_by_type(Type);
    }

    excel::config_set_quests_cfg::item_ptr_type get_quests_cfg_by_type(uint32_t Type, size_t idx) {
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return NULL;
        }

        return group->quests_cfg.get_by_type(Type, idx);
    }

    // ======================================== role_upgrade_cfg ========================================
    const excel::config_set_role_upgrade_cfg::id_container_type& get_role_upgrade_cfg_all_of_id() {
        static excel::config_set_role_upgrade_cfg::id_container_type empty;
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return empty;
        }

        return group->role_upgrade_cfg.get_all_of_id();
    }

    const excel::config_set_role_upgrade_cfg::id_value_type* get_role_upgrade_cfg_by_id(uint32_t Id) {
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return NULL;
        }

        return group->role_upgrade_cfg.get_list_by_id(Id);
    }

    excel::config_set_role_upgrade_cfg::item_ptr_type get_role_upgrade_cfg_by_id(uint32_t Id, size_t idx) {
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return NULL;
        }

        return group->role_upgrade_cfg.get_by_id(Id, idx);
    }

    const excel::config_set_role_upgrade_cfg::id_level_container_type& get_role_upgrade_cfg_all_of_id_level() {
        static excel::config_set_role_upgrade_cfg::id_level_container_type empty;
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return empty;
        }

        return group->role_upgrade_cfg.get_all_of_id_level();
    }

    excel::config_set_role_upgrade_cfg::id_level_value_type get_role_upgrade_cfg_by_id_level(uint32_t Id, uint32_t Level) {
        config_manager::config_group_ptr_t group = config_manager::me()->get_current_config_group();
        if (!group) {
            return NULL;
        }

        return group->role_upgrade_cfg.get_by_id_level(Id, Level);
    }
} // excel
