// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quest.proto

#include "quest.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr quests_cfg_SubMsg::quests_cfg_SubMsg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : param3_(nullptr)
  , param1_(0u)
  , param2_(0u){}
struct quests_cfg_SubMsgDefaultTypeInternal {
  constexpr quests_cfg_SubMsgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~quests_cfg_SubMsgDefaultTypeInternal() {}
  union {
    quests_cfg_SubMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT quests_cfg_SubMsgDefaultTypeInternal _quests_cfg_SubMsg_default_instance_;
constexpr quests_cfg_SubSubMsg::quests_cfg_SubSubMsg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : p2_(PROTOBUF_ULONGLONG(0))
  , p1_(0u)
  , it2_(0)
{}
struct quests_cfg_SubSubMsgDefaultTypeInternal {
  constexpr quests_cfg_SubSubMsgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~quests_cfg_SubSubMsgDefaultTypeInternal() {}
  union {
    quests_cfg_SubSubMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT quests_cfg_SubSubMsgDefaultTypeInternal _quests_cfg_SubSubMsg_default_instance_;
constexpr quests_cfg::quests_cfg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr)
  , id_(0u)
  , type_(0u)
  , it2_(0)

  , it3_(0)

  , it1_(0)
{}
struct quests_cfgDefaultTypeInternal {
  constexpr quests_cfgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~quests_cfgDefaultTypeInternal() {}
  union {
    quests_cfg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT quests_cfgDefaultTypeInternal _quests_cfg_default_instance_;
constexpr TestBase::TestBase(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bbbbb_(nullptr)
  , value_(0u){}
struct TestBaseDefaultTypeInternal {
  constexpr TestBaseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TestBaseDefaultTypeInternal() {}
  union {
    TestBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TestBaseDefaultTypeInternal _TestBase_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_quest_2eproto[4];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_quest_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_quest_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_quest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::quests_cfg_SubMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::quests_cfg_SubMsg, param1_),
  PROTOBUF_FIELD_OFFSET(::quests_cfg_SubMsg, param2_),
  PROTOBUF_FIELD_OFFSET(::quests_cfg_SubMsg, param3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::quests_cfg_SubSubMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::quests_cfg_SubSubMsg, p1_),
  PROTOBUF_FIELD_OFFSET(::quests_cfg_SubSubMsg, p2_),
  PROTOBUF_FIELD_OFFSET(::quests_cfg_SubSubMsg, it2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::quests_cfg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::quests_cfg, id_),
  PROTOBUF_FIELD_OFFSET(::quests_cfg, type_),
  PROTOBUF_FIELD_OFFSET(::quests_cfg, name_),
  PROTOBUF_FIELD_OFFSET(::quests_cfg, desc_),
  PROTOBUF_FIELD_OFFSET(::quests_cfg, param_),
  PROTOBUF_FIELD_OFFSET(::quests_cfg, it2_),
  PROTOBUF_FIELD_OFFSET(::quests_cfg, it3_),
  PROTOBUF_FIELD_OFFSET(::quests_cfg, it1_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TestBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TestBase, value_),
  PROTOBUF_FIELD_OFFSET(::TestBase, bbbbb_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::quests_cfg_SubMsg)},
  { 8, -1, sizeof(::quests_cfg_SubSubMsg)},
  { 16, -1, sizeof(::quests_cfg)},
  { 29, -1, sizeof(::TestBase)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_quests_cfg_SubMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_quests_cfg_SubSubMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_quests_cfg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TestBase_default_instance_),
};

const char descriptor_table_protodef_quest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013quest.proto\032\020xresloader.proto\032\034xrescod"
  "e_extensions_v3.proto\032\nbase.proto\"\341\003\n\nqu"
  "ests_cfg\022\n\n\002Id\030\001 \001(\r\022\014\n\004Type\030\002 \001(\r\022\014\n\004Na"
  "me\030\003 \001(\t\022\014\n\004Desc\030\004 \001(\t\022!\n\005Param\030\005 \001(\0132\022."
  "quests_cfg.SubMsg\022\027\n\003it2\030\006 \001(\0162\n.ItemTyp"
  "e2\022\"\n\003it3\030\007 \001(\0162\025.quests_cfg.ItemType3\022\033"
  "\n\003it1\030\010 \001(\0162\016.base.ItemType\032O\n\006SubMsg\022\016\n"
  "\006Param1\030\001 \001(\r\022\016\n\006Param2\030\002 \001(\r\022%\n\006Param3\030"
  "\003 \001(\0132\025.quests_cfg.SubSubMsg\032<\n\tSubSubMs"
  "g\022\n\n\002p1\030\001 \001(\r\022\n\n\002p2\030\002 \001(\004\022\027\n\003it2\030\003 \001(\0162\n"
  ".ItemType2\"A\n\tItemType3\022\020\n\014TYPE_UNKNOWN\020"
  "\000\022\n\n\006TYPE_G\020\007\022\n\n\006TYPE_H\020\010\022\n\n\006TYPE_I\020\t:N\272"
  "TK\262\006$../config/sample-data/quests_cfg.bi"
  "n\312\014\004\022\002Id\312\014\010\022\004Type\030\003\352\022\006client\352\022\006server\"4\n"
  "\010TestBase\022\r\n\005value\030\001 \001(\r\022\031\n\005bbbbb\030\002 \001(\0132"
  "\n.base.Base*A\n\tItemType2\022\020\n\014TYPE_UNKNOWN"
  "\020\000\022\n\n\006TYPE_D\020\004\022\n\n\006TYPE_E\020\005\022\n\n\006TYPE_F\020\006B\003"
  "\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_quest_2eproto_deps[3] = {
  &::descriptor_table_base_2eproto,
  &::descriptor_table_xrescode_5fextensions_5fv3_2eproto,
  &::descriptor_table_xresloader_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_quest_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_quest_2eproto = {
  false, false, 691, descriptor_table_protodef_quest_2eproto, "quest.proto", 
  &descriptor_table_quest_2eproto_once, descriptor_table_quest_2eproto_deps, 3, 4,
  schemas, file_default_instances, TableStruct_quest_2eproto::offsets,
  file_level_metadata_quest_2eproto, file_level_enum_descriptors_quest_2eproto, file_level_service_descriptors_quest_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_quest_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_quest_2eproto);
  return descriptor_table_quest_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_quest_2eproto(&descriptor_table_quest_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* quests_cfg_ItemType3_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_quest_2eproto);
  return file_level_enum_descriptors_quest_2eproto[0];
}
bool quests_cfg_ItemType3_IsValid(int value) {
  switch (value) {
    case 0:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr quests_cfg_ItemType3 quests_cfg::TYPE_UNKNOWN;
constexpr quests_cfg_ItemType3 quests_cfg::TYPE_G;
constexpr quests_cfg_ItemType3 quests_cfg::TYPE_H;
constexpr quests_cfg_ItemType3 quests_cfg::TYPE_I;
constexpr quests_cfg_ItemType3 quests_cfg::ItemType3_MIN;
constexpr quests_cfg_ItemType3 quests_cfg::ItemType3_MAX;
constexpr int quests_cfg::ItemType3_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ItemType2_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_quest_2eproto);
  return file_level_enum_descriptors_quest_2eproto[1];
}
bool ItemType2_IsValid(int value) {
  switch (value) {
    case 0:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class quests_cfg_SubMsg::_Internal {
 public:
  static const ::quests_cfg_SubSubMsg& param3(const quests_cfg_SubMsg* msg);
};

const ::quests_cfg_SubSubMsg&
quests_cfg_SubMsg::_Internal::param3(const quests_cfg_SubMsg* msg) {
  return *msg->param3_;
}
quests_cfg_SubMsg::quests_cfg_SubMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:quests_cfg.SubMsg)
}
quests_cfg_SubMsg::quests_cfg_SubMsg(const quests_cfg_SubMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_param3()) {
    param3_ = new ::quests_cfg_SubSubMsg(*from.param3_);
  } else {
    param3_ = nullptr;
  }
  ::memcpy(&param1_, &from.param1_,
    static_cast<size_t>(reinterpret_cast<char*>(&param2_) -
    reinterpret_cast<char*>(&param1_)) + sizeof(param2_));
  // @@protoc_insertion_point(copy_constructor:quests_cfg.SubMsg)
}

void quests_cfg_SubMsg::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&param3_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&param2_) -
    reinterpret_cast<char*>(&param3_)) + sizeof(param2_));
}

quests_cfg_SubMsg::~quests_cfg_SubMsg() {
  // @@protoc_insertion_point(destructor:quests_cfg.SubMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void quests_cfg_SubMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete param3_;
}

void quests_cfg_SubMsg::ArenaDtor(void* object) {
  quests_cfg_SubMsg* _this = reinterpret_cast< quests_cfg_SubMsg* >(object);
  (void)_this;
}
void quests_cfg_SubMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void quests_cfg_SubMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void quests_cfg_SubMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:quests_cfg.SubMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && param3_ != nullptr) {
    delete param3_;
  }
  param3_ = nullptr;
  ::memset(&param1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param2_) -
      reinterpret_cast<char*>(&param1_)) + sizeof(param2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* quests_cfg_SubMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 Param1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          param1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Param2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          param2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .quests_cfg.SubSubMsg Param3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_param3(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* quests_cfg_SubMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:quests_cfg.SubMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Param1 = 1;
  if (this->param1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_param1(), target);
  }

  // uint32 Param2 = 2;
  if (this->param2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_param2(), target);
  }

  // .quests_cfg.SubSubMsg Param3 = 3;
  if (this->has_param3()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::param3(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:quests_cfg.SubMsg)
  return target;
}

size_t quests_cfg_SubMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:quests_cfg.SubMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .quests_cfg.SubSubMsg Param3 = 3;
  if (this->has_param3()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param3_);
  }

  // uint32 Param1 = 1;
  if (this->param1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_param1());
  }

  // uint32 Param2 = 2;
  if (this->param2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_param2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void quests_cfg_SubMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:quests_cfg.SubMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const quests_cfg_SubMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<quests_cfg_SubMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:quests_cfg.SubMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:quests_cfg.SubMsg)
    MergeFrom(*source);
  }
}

void quests_cfg_SubMsg::MergeFrom(const quests_cfg_SubMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:quests_cfg.SubMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_param3()) {
    _internal_mutable_param3()->::quests_cfg_SubSubMsg::MergeFrom(from._internal_param3());
  }
  if (from.param1() != 0) {
    _internal_set_param1(from._internal_param1());
  }
  if (from.param2() != 0) {
    _internal_set_param2(from._internal_param2());
  }
}

void quests_cfg_SubMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:quests_cfg.SubMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void quests_cfg_SubMsg::CopyFrom(const quests_cfg_SubMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:quests_cfg.SubMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool quests_cfg_SubMsg::IsInitialized() const {
  return true;
}

void quests_cfg_SubMsg::InternalSwap(quests_cfg_SubMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(quests_cfg_SubMsg, param2_)
      + sizeof(quests_cfg_SubMsg::param2_)
      - PROTOBUF_FIELD_OFFSET(quests_cfg_SubMsg, param3_)>(
          reinterpret_cast<char*>(&param3_),
          reinterpret_cast<char*>(&other->param3_));
}

::PROTOBUF_NAMESPACE_ID::Metadata quests_cfg_SubMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class quests_cfg_SubSubMsg::_Internal {
 public:
};

quests_cfg_SubSubMsg::quests_cfg_SubSubMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:quests_cfg.SubSubMsg)
}
quests_cfg_SubSubMsg::quests_cfg_SubSubMsg(const quests_cfg_SubSubMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&p2_, &from.p2_,
    static_cast<size_t>(reinterpret_cast<char*>(&it2_) -
    reinterpret_cast<char*>(&p2_)) + sizeof(it2_));
  // @@protoc_insertion_point(copy_constructor:quests_cfg.SubSubMsg)
}

void quests_cfg_SubSubMsg::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&p2_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&it2_) -
    reinterpret_cast<char*>(&p2_)) + sizeof(it2_));
}

quests_cfg_SubSubMsg::~quests_cfg_SubSubMsg() {
  // @@protoc_insertion_point(destructor:quests_cfg.SubSubMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void quests_cfg_SubSubMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void quests_cfg_SubSubMsg::ArenaDtor(void* object) {
  quests_cfg_SubSubMsg* _this = reinterpret_cast< quests_cfg_SubSubMsg* >(object);
  (void)_this;
}
void quests_cfg_SubSubMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void quests_cfg_SubSubMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void quests_cfg_SubSubMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:quests_cfg.SubSubMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&p2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&it2_) -
      reinterpret_cast<char*>(&p2_)) + sizeof(it2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* quests_cfg_SubSubMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 p1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          p1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 p2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          p2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ItemType2 it2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_it2(static_cast<::ItemType2>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* quests_cfg_SubSubMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:quests_cfg.SubSubMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 p1 = 1;
  if (this->p1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_p1(), target);
  }

  // uint64 p2 = 2;
  if (this->p2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_p2(), target);
  }

  // .ItemType2 it2 = 3;
  if (this->it2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_it2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:quests_cfg.SubSubMsg)
  return target;
}

size_t quests_cfg_SubSubMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:quests_cfg.SubSubMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 p2 = 2;
  if (this->p2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_p2());
  }

  // uint32 p1 = 1;
  if (this->p1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_p1());
  }

  // .ItemType2 it2 = 3;
  if (this->it2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_it2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void quests_cfg_SubSubMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:quests_cfg.SubSubMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const quests_cfg_SubSubMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<quests_cfg_SubSubMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:quests_cfg.SubSubMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:quests_cfg.SubSubMsg)
    MergeFrom(*source);
  }
}

void quests_cfg_SubSubMsg::MergeFrom(const quests_cfg_SubSubMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:quests_cfg.SubSubMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.p2() != 0) {
    _internal_set_p2(from._internal_p2());
  }
  if (from.p1() != 0) {
    _internal_set_p1(from._internal_p1());
  }
  if (from.it2() != 0) {
    _internal_set_it2(from._internal_it2());
  }
}

void quests_cfg_SubSubMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:quests_cfg.SubSubMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void quests_cfg_SubSubMsg::CopyFrom(const quests_cfg_SubSubMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:quests_cfg.SubSubMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool quests_cfg_SubSubMsg::IsInitialized() const {
  return true;
}

void quests_cfg_SubSubMsg::InternalSwap(quests_cfg_SubSubMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(quests_cfg_SubSubMsg, it2_)
      + sizeof(quests_cfg_SubSubMsg::it2_)
      - PROTOBUF_FIELD_OFFSET(quests_cfg_SubSubMsg, p2_)>(
          reinterpret_cast<char*>(&p2_),
          reinterpret_cast<char*>(&other->p2_));
}

::PROTOBUF_NAMESPACE_ID::Metadata quests_cfg_SubSubMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class quests_cfg::_Internal {
 public:
  static const ::quests_cfg_SubMsg& param(const quests_cfg* msg);
};

const ::quests_cfg_SubMsg&
quests_cfg::_Internal::param(const quests_cfg* msg) {
  return *msg->param_;
}
quests_cfg::quests_cfg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:quests_cfg)
}
quests_cfg::quests_cfg(const quests_cfg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_desc().empty()) {
    desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_desc(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::quests_cfg_SubMsg(*from.param_);
  } else {
    param_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&it1_) -
    reinterpret_cast<char*>(&id_)) + sizeof(it1_));
  // @@protoc_insertion_point(copy_constructor:quests_cfg)
}

void quests_cfg::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&param_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&it1_) -
    reinterpret_cast<char*>(&param_)) + sizeof(it1_));
}

quests_cfg::~quests_cfg() {
  // @@protoc_insertion_point(destructor:quests_cfg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void quests_cfg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void quests_cfg::ArenaDtor(void* object) {
  quests_cfg* _this = reinterpret_cast< quests_cfg* >(object);
  (void)_this;
}
void quests_cfg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void quests_cfg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void quests_cfg::Clear() {
// @@protoc_insertion_point(message_clear_start:quests_cfg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  desc_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&it1_) -
      reinterpret_cast<char*>(&id_)) + sizeof(it1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* quests_cfg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "quests_cfg.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Desc = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "quests_cfg.Desc"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .quests_cfg.SubMsg Param = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ItemType2 it2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_it2(static_cast<::ItemType2>(val));
        } else goto handle_unusual;
        continue;
      // .quests_cfg.ItemType3 it3 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_it3(static_cast<::quests_cfg_ItemType3>(val));
        } else goto handle_unusual;
        continue;
      // .base.ItemType it1 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_it1(static_cast<::base::ItemType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* quests_cfg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:quests_cfg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // uint32 Type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_type(), target);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "quests_cfg.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string Desc = 4;
  if (this->desc().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_desc().data(), static_cast<int>(this->_internal_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "quests_cfg.Desc");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_desc(), target);
  }

  // .quests_cfg.SubMsg Param = 5;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::param(this), target, stream);
  }

  // .ItemType2 it2 = 6;
  if (this->it2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_it2(), target);
  }

  // .quests_cfg.ItemType3 it3 = 7;
  if (this->it3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_it3(), target);
  }

  // .base.ItemType it1 = 8;
  if (this->it1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_it1(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:quests_cfg)
  return target;
}

size_t quests_cfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:quests_cfg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Desc = 4;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desc());
  }

  // .quests_cfg.SubMsg Param = 5;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // uint32 Type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_type());
  }

  // .ItemType2 it2 = 6;
  if (this->it2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_it2());
  }

  // .quests_cfg.ItemType3 it3 = 7;
  if (this->it3() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_it3());
  }

  // .base.ItemType it1 = 8;
  if (this->it1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_it1());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void quests_cfg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:quests_cfg)
  GOOGLE_DCHECK_NE(&from, this);
  const quests_cfg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<quests_cfg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:quests_cfg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:quests_cfg)
    MergeFrom(*source);
  }
}

void quests_cfg::MergeFrom(const quests_cfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:quests_cfg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.desc().size() > 0) {
    _internal_set_desc(from._internal_desc());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::quests_cfg_SubMsg::MergeFrom(from._internal_param());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.it2() != 0) {
    _internal_set_it2(from._internal_it2());
  }
  if (from.it3() != 0) {
    _internal_set_it3(from._internal_it3());
  }
  if (from.it1() != 0) {
    _internal_set_it1(from._internal_it1());
  }
}

void quests_cfg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:quests_cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void quests_cfg::CopyFrom(const quests_cfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:quests_cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool quests_cfg::IsInitialized() const {
  return true;
}

void quests_cfg::InternalSwap(quests_cfg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  desc_.Swap(&other->desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(quests_cfg, it1_)
      + sizeof(quests_cfg::it1_)
      - PROTOBUF_FIELD_OFFSET(quests_cfg, param_)>(
          reinterpret_cast<char*>(&param_),
          reinterpret_cast<char*>(&other->param_));
}

::PROTOBUF_NAMESPACE_ID::Metadata quests_cfg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TestBase::_Internal {
 public:
  static const ::base::Base& bbbbb(const TestBase* msg);
};

const ::base::Base&
TestBase::_Internal::bbbbb(const TestBase* msg) {
  return *msg->bbbbb_;
}
void TestBase::clear_bbbbb() {
  if (GetArena() == nullptr && bbbbb_ != nullptr) {
    delete bbbbb_;
  }
  bbbbb_ = nullptr;
}
TestBase::TestBase(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TestBase)
}
TestBase::TestBase(const TestBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bbbbb()) {
    bbbbb_ = new ::base::Base(*from.bbbbb_);
  } else {
    bbbbb_ = nullptr;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:TestBase)
}

void TestBase::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&bbbbb_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&bbbbb_)) + sizeof(value_));
}

TestBase::~TestBase() {
  // @@protoc_insertion_point(destructor:TestBase)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TestBase::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete bbbbb_;
}

void TestBase::ArenaDtor(void* object) {
  TestBase* _this = reinterpret_cast< TestBase* >(object);
  (void)_this;
}
void TestBase::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TestBase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TestBase::Clear() {
// @@protoc_insertion_point(message_clear_start:TestBase)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && bbbbb_ != nullptr) {
    delete bbbbb_;
  }
  bbbbb_ = nullptr;
  value_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TestBase::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .base.Base bbbbb = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_bbbbb(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestBase::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TestBase)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 1;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_value(), target);
  }

  // .base.Base bbbbb = 2;
  if (this->has_bbbbb()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::bbbbb(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestBase)
  return target;
}

size_t TestBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TestBase)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .base.Base bbbbb = 2;
  if (this->has_bbbbb()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bbbbb_);
  }

  // uint32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestBase::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TestBase)
  GOOGLE_DCHECK_NE(&from, this);
  const TestBase* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestBase>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TestBase)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TestBase)
    MergeFrom(*source);
  }
}

void TestBase::MergeFrom(const TestBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TestBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bbbbb()) {
    _internal_mutable_bbbbb()->::base::Base::MergeFrom(from._internal_bbbbb());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void TestBase::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TestBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestBase::CopyFrom(const TestBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestBase::IsInitialized() const {
  return true;
}

void TestBase::InternalSwap(TestBase* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestBase, value_)
      + sizeof(TestBase::value_)
      - PROTOBUF_FIELD_OFFSET(TestBase, bbbbb_)>(
          reinterpret_cast<char*>(&bbbbb_),
          reinterpret_cast<char*>(&other->bbbbb_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TestBase::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::quests_cfg_SubMsg* Arena::CreateMaybeMessage< ::quests_cfg_SubMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::quests_cfg_SubMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::quests_cfg_SubSubMsg* Arena::CreateMaybeMessage< ::quests_cfg_SubSubMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::quests_cfg_SubSubMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::quests_cfg* Arena::CreateMaybeMessage< ::quests_cfg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::quests_cfg >(arena);
}
template<> PROTOBUF_NOINLINE ::TestBase* Arena::CreateMaybeMessage< ::TestBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TestBase >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
